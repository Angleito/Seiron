version: '3.8'

services:
  # Test Database Services
  postgres-test:
    image: postgres:15
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: seiron_test
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d seiron_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-test:
    image: redis:7
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Mock Hive Intelligence Service
  hive-mock:
    build:
      context: .
      dockerfile: Dockerfile.hive-mock
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=test
      - PORT=3001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend Test Runner
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - POSTGRES_HOST=postgres-test
      - POSTGRES_PORT=5432
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=seiron_test
      - REDIS_HOST=redis-test
      - REDIS_PORT=6379
      - HIVE_INTELLIGENCE_API_KEY=test-api-key-123
      - HIVE_INTELLIGENCE_BASE_URL=http://hive-mock:3001
      - HIVE_INTELLIGENCE_RATE_LIMIT=20
      - HIVE_INTELLIGENCE_CACHE_TTL=300
      - HIVE_INTELLIGENCE_RETRY_ATTEMPTS=2
      - HIVE_INTELLIGENCE_RETRY_DELAY=1000
      - OPENAI_API_KEY=test-openai-key
      - SUPABASE_URL=http://postgres-test:5432
      - SUPABASE_ANON_KEY=test-supabase-key
      - JWT_SECRET=test-jwt-secret
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
      hive-mock:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_test_node_modules:/app/node_modules
      - test_reports:/app/test-reports
    command: npm run test:hive-integration
    profiles:
      - test

  # Frontend Test Runner
  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - REACT_APP_API_URL=http://backend-test:8000
      - REACT_APP_HIVE_MOCK_URL=http://hive-mock:3001
    depends_on:
      hive-mock:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - frontend_test_node_modules:/app/node_modules
      - test_reports:/app/test-reports
    command: npm run test:blockchain-integration
    profiles:
      - test

  # End-to-End Test Runner
  e2e-test:
    build:
      context: .
      dockerfile: Dockerfile.e2e-test
    environment:
      - NODE_ENV=test
      - BACKEND_URL=http://backend-test:8000
      - FRONTEND_URL=http://frontend-test:3000
      - HIVE_MOCK_URL=http://hive-mock:3001
    depends_on:
      backend-test:
        condition: service_started
      frontend-test:
        condition: service_started
      hive-mock:
        condition: service_healthy
    volumes:
      - ./e2e:/app
      - e2e_test_node_modules:/app/node_modules
      - test_reports:/app/test-reports
    command: npm run test:hive-e2e
    profiles:
      - test

  # Property-Based Test Runner
  property-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - REDIS_HOST=redis-test
      - REDIS_PORT=6379
      - HIVE_INTELLIGENCE_API_KEY=test-api-key-123
      - HIVE_INTELLIGENCE_BASE_URL=http://hive-mock:3001
    depends_on:
      redis-test:
        condition: service_healthy
      hive-mock:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_test_node_modules:/app/node_modules
      - test_reports:/app/test-reports
    command: npm run test:property-hive
    profiles:
      - test

  # Performance Test Runner
  performance-test:
    build:
      context: .
      dockerfile: Dockerfile.performance-test
    environment:
      - NODE_ENV=test
      - BACKEND_URL=http://backend-test:8000
      - HIVE_MOCK_URL=http://hive-mock:3001
      - CONCURRENT_USERS=10
      - TEST_DURATION=60s
    depends_on:
      backend-test:
        condition: service_started
      hive-mock:
        condition: service_healthy
    volumes:
      - ./performance:/app
      - performance_test_node_modules:/app/node_modules
      - test_reports:/app/test-reports
    command: npm run test:performance-hive
    profiles:
      - performance

  # Security Test Runner
  security-test:
    build:
      context: .
      dockerfile: Dockerfile.security-test
    environment:
      - NODE_ENV=test
      - BACKEND_URL=http://backend-test:8000
      - HIVE_MOCK_URL=http://hive-mock:3001
    depends_on:
      backend-test:
        condition: service_started
      hive-mock:
        condition: service_healthy
    volumes:
      - ./security:/app
      - security_test_node_modules:/app/node_modules
      - test_reports:/app/test-reports
    command: npm run test:security-hive
    profiles:
      - security

  # Test Reporter
  test-reporter:
    build:
      context: .
      dockerfile: Dockerfile.test-reporter
    environment:
      - NODE_ENV=test
    depends_on:
      - backend-test
      - frontend-test
      - e2e-test
      - property-test
    volumes:
      - test_reports:/app/test-reports
      - ./reports:/app/reports
    command: npm run generate-test-report
    profiles:
      - test

volumes:
  postgres_test_data:
  redis_test_data:
  backend_test_node_modules:
  frontend_test_node_modules:
  e2e_test_node_modules:
  performance_test_node_modules:
  security_test_node_modules:
  test_reports:

networks:
  default:
    driver: bridge