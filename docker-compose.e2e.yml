version: '3.8'

services:
  # Frontend Next.js application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: e2e-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=test
      - NEXT_PUBLIC_API_URL=http://backend:3001
      - NEXT_PUBLIC_PRIVY_APP_ID=${NEXT_PUBLIC_PRIVY_APP_ID:-test-privy-id}
      - NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=${NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID:-test-wallet-connect}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - e2e-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: e2e-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=test
      - API_PORT=3001
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY:-test-key}
      - OPENAI_MODEL=gpt-4
      - SEI_RPC_URL=http://protocol-simulator:8545
      - WALLET_ADDRESS=${E2E_TEST_WALLET:-0x742d35Cc6634C0532925a3b8D48C37Fc48c4e8D9}
      - PRIVATE_KEY=${E2E_TEST_PRIVATE_KEY:-test-private-key}
      - ENABLE_EXTERNAL_APIS=false
      - ENABLE_BLOCKCHAIN_CALLS=false
      - ENABLE_METRICS=true
      - LOG_LEVEL=info
      - DEBUG=ai-portfolio:*
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./test-results/e2e:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      protocol-simulator:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - e2e-network

  # Cypress E2E Test Runner
  cypress:
    image: cypress/included:13.6.1
    container_name: e2e-cypress
    environment:
      - CYPRESS_baseUrl=http://frontend:3000
      - CYPRESS_apiUrl=http://backend:3001
      - CYPRESS_video=true
      - CYPRESS_screenshotOnRunFailure=true
      - CYPRESS_videosFolder=/app/cypress/videos
      - CYPRESS_screenshotsFolder=/app/cypress/screenshots
      - CYPRESS_supportFolder=/app/cypress/support
      - CYPRESS_fixturesFolder=/app/cypress/fixtures
      - CYPRESS_specPattern=/app/cypress/e2e/**/*.cy.{js,jsx,ts,tsx}
      - ELECTRON_EXTRA_LAUNCH_ARGS=--disable-gpu
    volumes:
      - ./cypress:/app/cypress
      - ./cypress.config.ts:/app/cypress.config.ts
      - ./test-results/e2e/cypress:/app/cypress/screenshots
      - ./test-results/e2e/cypress:/app/cypress/videos
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
      msw-server:
        condition: service_healthy
    command: cypress run --browser chrome
    networks:
      - e2e-network

  # Mock Service Worker (MSW) Server for API mocking
  msw-server:
    build:
      context: .
      dockerfile: Dockerfile.msw
    container_name: e2e-msw-server
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=test
      - PORT=8080
      - MOCK_ELEVENLABS=true
      - MOCK_OPENAI=true
    volumes:
      - ./test/mocks:/app/mocks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - e2e-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: e2e-redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - e2e-network

  # Protocol Simulator for blockchain operations
  protocol-simulator:
    build:
      context: .
      dockerfile: Dockerfile.simulator
    container_name: e2e-protocol-simulator
    ports:
      - "8545:8545"
    environment:
      - NETWORK=sei-testnet
      - CHAIN_ID=1329
      - BLOCK_TIME=1000
      - ACCOUNTS=10
      - MNEMONIC=test test test test test test test test test test test junk
      - ENABLE_LOGGING=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - e2e-network

volumes:
  redis-data:
    driver: local

networks:
  e2e-network:
    driver: bridge