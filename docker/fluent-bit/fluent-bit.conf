[SERVICE]
    Flush         1
    Log_Level     ${FLUENT_BIT_LOG_LEVEL}
    Daemon        off
    Parsers_File  parsers.conf
    HTTP_Server   On
    HTTP_Listen   0.0.0.0
    HTTP_Port     2020
    storage.path  /tmp/fluent-bit/
    storage.sync  normal
    storage.checksum off
    storage.backlog.mem_limit 5M

# Docker container logs
[INPUT]
    Name              tail
    Path              /var/lib/docker/containers/*/*.log
    Parser            docker
    Tag               docker.*
    DB                /tmp/fluent-bit/docker.db
    Mem_Buf_Limit     50MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Application logs from volume mounts
[INPUT]
    Name              tail
    Path              /fluent-bit/logs/backend/*.log
    Parser            json
    Tag               backend.*
    DB                /tmp/fluent-bit/backend.db
    Mem_Buf_Limit     50MB
    Skip_Long_Lines   On
    Refresh_Interval  10

[INPUT]
    Name              tail
    Path              /fluent-bit/logs/frontend/*.log
    Parser            json
    Tag               frontend.*
    DB                /tmp/fluent-bit/frontend.db
    Mem_Buf_Limit     50MB
    Skip_Long_Lines   On
    Refresh_Interval  10

[INPUT]
    Name              tail
    Path              /fluent-bit/logs/redis/*.log
    Parser            redis
    Tag               redis.*
    DB                /tmp/fluent-bit/redis.db
    Mem_Buf_Limit     50MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Health check and monitoring
[INPUT]
    Name              tail
    Path              /fluent-bit/logs/prometheus/*.log
    Parser            json
    Tag               prometheus.*
    DB                /tmp/fluent-bit/prometheus.db
    Mem_Buf_Limit     50MB
    Skip_Long_Lines   On
    Refresh_Interval  10

[INPUT]
    Name              tail
    Path              /fluent-bit/logs/grafana/*.log
    Parser            json
    Tag               grafana.*
    DB                /tmp/fluent-bit/grafana.db
    Mem_Buf_Limit     50MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Filter to add environment and service metadata
[FILTER]
    Name                kubernetes
    Match               docker.*
    Kube_URL            https://kubernetes.default.svc:443
    Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
    Kube_Tag_Prefix     docker.var.log.containers.
    Merge_Log           On
    Keep_Log            Off
    K8S-Logging.Parser  On
    K8S-Logging.Exclude Off

# Add timestamp and environment
[FILTER]
    Name                modify
    Match               *
    Add                 environment production
    Add                 cluster seiron
    Add                 timestamp ${TIMESTAMP}

# Error detection and alerting
[FILTER]
    Name                grep
    Match               *
    Regex               level (ERROR|FATAL|PANIC)

# Performance monitoring
[FILTER]
    Name                throttle
    Match               *
    Rate                1000
    Window              300
    Interval            60s

# Output to files with rotation
[OUTPUT]
    Name                file
    Match               docker.*
    Path                /fluent-bit/logs/
    File                docker-containers.log
    Format              json_lines

[OUTPUT]
    Name                file
    Match               backend.*
    Path                /fluent-bit/logs/backend/
    File                backend-aggregated.log
    Format              json_lines

[OUTPUT]
    Name                file
    Match               frontend.*
    Path                /fluent-bit/logs/frontend/
    File                frontend-aggregated.log
    Format              json_lines

[OUTPUT]
    Name                file
    Match               redis.*
    Path                /fluent-bit/logs/redis/
    File                redis-aggregated.log
    Format              json_lines

# Error logs to separate file
[OUTPUT]
    Name                file
    Match               *
    Path                /fluent-bit/logs/
    File                errors.log
    Format              json_lines

# Health check endpoint
[OUTPUT]
    Name                stdout
    Match               health.*
    Format              json_lines