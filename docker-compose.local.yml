version: '3.8'

services:
  # Backend API Server for local development
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: seiron-backend-local
    ports:
      - "8000:3001"  # Map to port 8000 locally
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://seiron:seiron123@postgres:5432/seiron_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-local-jwt-secret
      - CORS_ORIGIN=http://localhost:5173
      # API Keys - add these to .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL}
      - UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN}
      # Additional configs
      - DEBUG=seiron:*
      - LOG_LEVEL=debug
    volumes:
      - ./backend:/app
      - /app/node_modules  # Prevent node_modules from being overwritten
      - ./logs/backend:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - seiron-local

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: seiron-postgres-local
    environment:
      - POSTGRES_USER=seiron
      - POSTGRES_PASSWORD=seiron123
      - POSTGRES_DB=seiron_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U seiron"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - seiron-local

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: seiron-redis-local
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - seiron-local

volumes:
  postgres_data:
  redis_data:

networks:
  seiron-local:
    driver: bridge