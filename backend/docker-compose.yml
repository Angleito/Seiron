# Docker Compose configuration for development environment
# Provides Redis, development API, and optional services

version: '3.8'

services:
  # ============================================
  # Backend API Service
  # ============================================
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: sei-portfolio-api-dev
    ports:
      - "${PORT:-3001}:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - HOST=0.0.0.0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-change-in-production}
      - SEI_RPC_URL=${SEI_RPC_URL:-https://rpc.sei-testnet.com}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - sei-portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # ============================================
  # Redis Cache & Session Store
  # ============================================
  redis:
    image: redis:7-alpine
    container_name: sei-portfolio-redis-dev
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: >
      sh -c '
        if [ -n "$$REDIS_PASSWORD" ]; then
          redis-server --requirepass "$$REDIS_PASSWORD" --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
        else
          redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
        fi
      '
    volumes:
      - redis-data:/data
    networks:
      - sei-portfolio-network
    restart: unless-stopped
    healthcheck:
      test: >
        sh -c '
          if [ -n "$$REDIS_PASSWORD" ]; then
            redis-cli -a "$$REDIS_PASSWORD" ping
          else
            redis-cli ping
          fi
        '
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # ============================================
  # Redis Commander (Optional Redis UI)
  # ============================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: sei-portfolio-redis-ui-dev
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-}
      - HTTP_USER=${REDIS_UI_USER:-admin}
      - HTTP_PASSWORD=${REDIS_UI_PASSWORD:-admin}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - sei-portfolio-network
    restart: unless-stopped
    profiles:
      - ui

  # ============================================
  # Nginx Reverse Proxy (Optional)
  # ============================================
  nginx:
    image: nginx:alpine
    container_name: sei-portfolio-nginx-dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - sei-portfolio-network
    restart: unless-stopped
    profiles:
      - proxy

# ============================================
# Networks
# ============================================
networks:
  sei-portfolio-network:
    driver: bridge
    name: sei-portfolio-dev

# ============================================
# Volumes
# ============================================
volumes:
  redis-data:
    name: sei-portfolio-redis-data-dev
    driver: local
